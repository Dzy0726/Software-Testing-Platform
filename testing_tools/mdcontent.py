bug_tracker_md1 = r'''> **什么是bug跟踪测试工具？**
>
> *缺陷跟踪软件* 自动化跟踪和监视缺陷、缺陷和其他妨碍组织技术和信息基础架构高效运行的问题的过程.

### [Redmine](https://www.redmine.org)

**Redmine** RedMine是一个开源的，**基于web的**项目管理和缺陷跟踪工具。它使用**myCalendar**和**Gantt chart**来辅助项目和进度可视化。同时，支持多项目管理。Redmine是一个免费的开源软件解决方案，它提供集成的项目管理功能、问题跟踪和对多种版本控制选项的支持。'''


bug_tracker_md2 = r'''|Pros|Cons|
| :---: | :---: |
| Redmine的用户通常会发现系统的基本版本易于实现和使用 | 如果您只是在寻找bug跟踪，那么Redmine可能比您预期的要多一些，但是您可以利用其可定制界面的灵活性和大量可用插件，随着时间的推移使系统适应您团队的需要. |

### [BugZilla](https://www.bugzilla.org)

由**Mozilla**团队于1998年开发的**Bugzilla**是一个开源工具，提供**强大的搜索功能、重复错误检测、时间跟踪和补丁审阅器**，使代码行更容易阅读。您可以在bug中留下私人评论和注释，并向相关/必要的团队成员授予访问特定bug的权限。'''


bug_tracker_md3 = r'''|                             Pros                             |                             Cons                             |
| :----------------------------------------------------------: | :----------------------------------------------------------: |
| Bugzilla用户喜欢该软件易于使用且学习曲线较低 | 用户注意到，如果您的需求更复杂，系统的“基本”设置会让您感到稀疏。大多数评论家认为这个界面可以改头换面 |

### [MantisBT](https://www.mantisbt.org)

**MantisBT**构建于PHP（超文本预处理器）之上，与MySQL和PostgreSQL数据库兼容。它通常用作bug追踪器，但是您也可以配置系统来管理更大的软件开发项目。MantisBT提供了**访问控制**，您可以根据项目进行更改，**可自定义的问题字段、通知和工作流**，如果您的团队需要移动访问，还提供了**移动优化用户界面**插件。主要特点如下：

- 该系统是用php编写的，易于安装，无需像bugzilla那样安装perl支持;
- 该系统相对简单轻便，使用方便;
- 它支持49种不同的语言，是一种广泛使用的错误跟踪工具'''


bug_tracker_md4 = r'''|                             Pros                             |                             Cons                             |
| :----------------------------------------------------------: | :----------------------------------------------------------: |
| 评论者发现MantisBT对于一个有经验的程序员来说是很容易使用的，但是注意到一个普通用户可能需要一些培训用户表示，尽管MantisBT的界面已经过时，但它仍然提供了软件开发团队跟踪和修复bug所需的所有基本功能 |

### 其他流行的bug跟踪测试工具

- [Trac](https://trac.edgewall.org): **Trac** 是一个基于web的软件项目管理和缺陷/问题跟踪系统，强调易用性和低成本。它提供了一个集成的Wiki、一个版本控制系统的接口，以及许多方便的方法来掌握项目中的事件和更改。
- [Fossil](https://fossil-scm.org/home/doc/trunk/www/bugtheory.wiki): **Fossil** 是一种跨平台服务器，可以在各种平台上运行，如Linux、BSD派生系统、MacOS和Windows。它可以提供分布式版本控制、问题跟踪、wiki服务和博客。该软件具有内置的网络接口，降低了项目跟踪的复杂性，提高了状态感知。用户只需键入“化石用户界面”，化石就会自动在用户的网页浏览器中打开一个网页，提供详细的历史和状态信息。
- [Phabricator](https://www.phacility.com/phabricator/): **Phabricator** 是一套基于Web的软件开发协同测试工具，包括代码评审工具Differential、存储库浏览器Diffusion、变更监控工具Herald、Bug跟踪工具Maniphest和wiki工具phrition。Phabricator可以与Git、Mercurial和Subversion集成。
- [WebIssues](https://webissues.mimec.org): **WebIssues** 是一个开源的多平台系统，用于问题跟踪和团队协作。它可以用于存储、共享和跟踪具有各种属性、描述、注释和文件附件的问题。它易于安装和使用，但具有许多功能，并且高度可定制。
- [Backlog](https://backlog.com): 专为开发者设计, **Backlog** 是一个在线项目管理解决方案，包括错误跟踪。该系统允许您查看所有缺陷在整个项目工作流中的位置。您可以使用所需的任何详细信息记录工作，并创建自定义字段以高效地解决问题。
- [Zoho](https://www.zoho.com/bugtracker/): **Zoho Bug Tracker** 是一个简单，快速和可扩展的错误跟踪软件，可以帮助您轻松地管理错误和提供伟大的产品按时。'''


testing_tool_md1 = r'''> **什么是测试自动化?**
>
> 在软件测试中，**测试自动化**是使用与被测试软件分离的软件来控制测试的执行以及实际结果与预测结果的比较。测试自动化可以在已经存在的正式测试过程中自动化一些重复但必要的任务，或者执行手动难以完成的额外测试。  

### [Selenium](https://www.selenium.dev/)

不用说，**Selenium**是目前可用的最好的开源测试工具之一。Selenium与许多编程语言、测试框架、浏览器和操作系统兼容，是一个非常棒的**web应用程序**自动化测试工具。它帮助您**为回归测试、探索性测试和快速错误复制**创建非常有效的测试脚本。'''


testing_tool_md2 = r'''|             Pros              |                             Cons                             |
| :---------------------------: | :----------------------------------------------------------: |
| 无内置图像比较 | 支持移动测试和无与伦比的灵活性。轻松集成各种开发平台，包括Maven、SauceLabs、Jenkins、TestNG、QMetry、SauceLabs等 |

### [Appium](http://appium.io/)

**Appium** 是另一种流行的开源测试工具，最适合**测试本机、混合和移动web应用**。它允许您**从测试代码完全访问后端API和数据库**。而且，它能让你很快开始。它很容易设置，并提供了一个干净的界面。 '''


testing_tool_md3 = r'''|                       Pros                       |                             Cons                             |
| :----------------------------------------------: | :----------------------------------------------------------: |
| 文档较少，仅支持移动应用程序 | 支持多种编程语言，如python、java、ruby、C#等。通过一组广泛的参数，通过命令行轻松管理工具 |

### [JMeter](https://jmeter.apache.org/)

**ApacheJMeter**是一款开源的Java桌面应用程序，主要用于**web应用程序的负载测试**。它还支持单元测试和有限功能测试。它有很多好的特性，比如**动态报告、可移植性、强大的测试IDE等等**，并且支持不同类型的应用程序、协议、shell脚本、Java对象和数据库。'''


testing_tool_md4 = r'''|                    Pros                    |                             Cons                             |
| :----------------------------------------: | :----------------------------------------------------------: |
| 报告和分析功能较差 | 可以测试静态和动态资源。使您能够通过其简单而快速的接口功能执行多线程 |

### 其他流行的测试自动化工具

- [WatiN](https://sourceforge.net/projects/watin/): **WatiN**, NET中的Web应用程序测试，是一个开源的Ruby库家族，有助于测试Web应用程序。您可以在主要平台上顺利运行它，如Internet Explorer、Opera、Firefox、Chrome和Safari。此外，在测试过程中，它允许您创建网页的屏幕截图。
- [SoapUI](https://www.soapui.org/): **SoapUI** 是知名公司用来充分审查其协议功能的顶级API测试工具之一。它的一些广泛的功能包括开发、web服务检查、功能测试、模拟和模拟、加载和遵从性测试。
- [Capybara](https://github.com/teamcapybara/capybara): **Capybara** 是一个开源的验收测试框架，有助于测试web应用程序。它模拟与应用程序交互的真实用户的行为。它可以与cumber、RSpec、Minitest等其他测试工具结合使用。
- [Cucumber](https://cucumber.io/): **Cucumber** 是一个基于行为驱动开发概念的开源工具，Cucumber允许您通过执行最佳描述应用程序行为的示例来执行自动验收测试。它支持跨平台操作系统，并与Ruby、Java和.NET等编程语言兼容。最好的部分是Cucumber允许您拥有一个用于规范和测试文档的活动文档。
- [Watir](https://watir.com/): **Watir** 是**W**eb**A**application**T**esting**i**n**R**uby的缩写。这是一个非常轻量级的、独立于技术的开源测试工具，用于web自动化测试。它允许您编写简单的、适应性强的、可读的和可维护的自动化测试。
- [Sikuli](http://www.sikuli.org/): **Sikuli** 是一个开源的测试工具，它建立在图像识别的概念之上，并具有自动化屏幕上看到的任何东西的能力。自动化非基于web的桌面应用程序非常有用。'''